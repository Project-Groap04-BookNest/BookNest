from flask import Flask
from models import db
from config import Config
from dotenv import load_dotenv
# import blueprints ‡∏ï‡∏±‡∏ß front-end ‡∏°‡∏≤ 
from routes.ui_routes import ui_bp
# import routes.api_routes
from routes.api_routes import api_bp

import pytest
# ‡πÇ‡∏´‡∏•‡∏î .env ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà (‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ Config)
load_dotenv()

#end-point ‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏ß‡πá‡∏ö 
def create_app(testing=False , test_db_uri=None):
    app = Flask(__name__)
    app.config.from_object(Config)
    
    # ‡∏ï‡∏±‡πâ‡∏á secret key (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö session, flash message)
    app.secret_key = "my_booknest_secret"  # ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏õ‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å .env ‡∏Å‡πá‡πÑ‡∏î‡πâ
    
    
    #‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ pytest ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏ó‡∏≥ unit test 
    if testing and test_db_uri:
        app.config["TESTING"] = True
        if test_db_uri:
            app.config["SQLALCHEMY_DATABASE_URI"] = test_db_uri
            app.config["TESTING"] = True
    
    
    
    
        # init DB
    db.init_app(app)
    
     # register blueprints ‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• router ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
    app.register_blueprint(ui_bp)
    
    #register api ‡πÄ‡∏≠‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• api ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ 
    app.register_blueprint(api_bp)



    return app


# ‡∏£‡∏∞‡∏ö‡∏ö debug ‡∏Ç‡∏≠‡∏á flask
if __name__ == "__main__":
    app = create_app()
    app.secret_key = "my_booknest_secret"
    
    
     # üëá reset database
    with app.app_context():
        db.drop_all()
        db.create_all()
        
        
    app.run(debug=True)
